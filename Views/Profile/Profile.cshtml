@{
    ViewData["Title"] = "Profile";
    ViewData["CSSFile"] = "~/css/Profile.css";
    ViewData["JSFile"] = "~/js/ViewPost.js";
    ViewData["JSFile2"] = "~/js/EditPost.js";
    ViewData["JSFile3"] = "~/js/PreviewMediaProfile.js";
    @model ThomasianMemoir.ViewModels.ProfileViewModel;
    @using Newtonsoft.Json

    var username = TempData["TempUsername"] as string;
    var email = TempData["TempEmail"] as string;
    var yearlevel = TempData["TempYearLevel"] as string;
    var profileDescription = TempData["TempProfileDescription"] as string;
    var profilepic = TempData["TempProfilePic"] as string;
    var defaultavatar = TempData["TempDefaultAvatar"] as string;
    var bannerpic = TempData["TempBannerPic"] as string;
    var defaultbanner = TempData["TempDefaultBanner"] as string;
    var serializedPosts = TempData["SerializedPosts"] as string;
    bool isPostOperation = TempData.ContainsKey("IsPostOperation") && (bool)TempData["IsPostOperation"];
    var fullname = "";

    var userPosts = new List<ThomasianMemoir.ViewModels.PostWithDetails>();
    var settings = new JsonSerializerSettings
    { ReferenceLoopHandling = ReferenceLoopHandling.Ignore };
    //var serializedPosts = JsonConvert.SerializeObject(Model.Posts, settings);
    //var serializedPostsRaw = Html.Raw(serializedPosts);
    if (isPostOperation)
    {
        fullname = TempData["TempFirstName"]+" "+TempData["TempLastName"];
        /*userPosts = string.IsNullOrEmpty(serializedPosts)
            ? new List<ThomasianMemoir.ViewModels.PostWithDetails>()
            : JsonConvert.DeserializeObject<List<ThomasianMemoir.ViewModels.PostWithDetails>>(serializedPosts);*/
        userPosts = string.IsNullOrEmpty(serializedPosts)
        ? Model.Posts
        : JsonConvert.DeserializeObject<List<ThomasianMemoir.ViewModels.PostWithDetails>>(serializedPosts);
    }
    else
    {
        fullname = @Model.FirstName+" "+@Model.LastName;
        userPosts = Model.Posts;
    }

    var studentClassification = "";
    if (!isPostOperation)
    {
        if (Model.YearLevel == "1st Year")
        {
            studentClassification = "Freshmen";
        }
        else if (Model.YearLevel == "2nd Year")
        {
            studentClassification = "Sophomore";
        }
        else if (Model.YearLevel == "3rd Year")
        {
            studentClassification = "Junior";
        }
        else if (Model.YearLevel == "4th Year")
        {
            studentClassification = "Senior";
        }
        else if (Model.YearLevel == "5th Year")
        {
            studentClassification = "Senior";
        }
    }
    else
    {
        if (yearlevel == "1st Year")
        {
            studentClassification = "Freshmen";
        }
        else if (yearlevel == "2nd Year")
        {
            studentClassification = "Sophomore";
        }
        else if (yearlevel == "3rd Year")
        {
            studentClassification = "Junior";
        }
        else if (yearlevel == "4th Year")
        {
            studentClassification = "Senior";
        }
        else if (yearlevel == "5th Year")
        {
            studentClassification = "Senior";
        }
    }
} 
<!--Banner-->
<div class="banner">
    @if (isPostOperation && TempData.ContainsKey("TempBannerPic")) {
        if (bannerpic != null) {
            <img src="~/uploads/@Url.Content(@bannerpic)">
        } else {
            <img src="~/img/Banners/@defaultbanner">
        }
    } else {
        @if (Model.BannerPic != null) {
            <img src="~/uploads/@Url.Content(Model.BannerPic)">
        } else {
            <img src="~/img/Banners/@Model.DefaultBanner" id="uploadBannerPhoto-previewImg">
        }
    }
</div>
<!--Profile-->
<div class="profileParent">
    <div class="profileChild">
        <div class="profilePic">
            @if (isPostOperation && TempData.ContainsKey("TempProfilePic")) {
                if (bannerpic != null) {
                    <img src="~/uploads/@Url.Content(@profilepic)" style="clip-path:circle(50%);">
                } else {
                    <img src="~/img/Avatars/@defaultavatar" class="profileImage" id="uploadProfilePicture-previewImg" style="clip-path:circle(50%);">
                }
            } else {
                @if (Model.ProfilePic != null) {
                    <img src="~/uploads/@Url.Content(Model.ProfilePic)" style="clip-path:circle(50%);">
                } else {
                    <img src="~/img/Avatars/@Model.DefaultAvatar" class="profileImage" id="uploadProfilePicture-previewImg" style="clip-path:circle(50%);">
                }
            }
        </div>
    </div>
</div>

<div class="details row">
    <!--User Information-->
    <div class="col-lg-4 px-md-5 userDescription">
        <div style="margin-bottom:20px;">
            <h2 style="font-weight:700; margin-bottom:0; word-break:break-all;">@fullname</h2>
            <span style="font-size:21px; word-break:break-all;">@@@if (isPostOperation && TempData.ContainsKey("TempUsername")){@username}else{@Model.Username}</span>
        </div>
        <div class="card" style="margin-bottom:10px;">
            <div class="cardInfo" style="margin:30px; text-align: justify; text-justify:inter-word;">
                <div style="margin-bottom:10px;">
                    <span class="boldtext" style="margin-right:12px;">Email Address:</span><span class="">@if (isPostOperation && TempData.ContainsKey("TempEmail")){@email}else{@Model.Email}</span><br />
                </div>
                <div style="margin-bottom:10px;">
                    <span class="boldtext" style="margin-right:12px;">Year Level:</span><span class="">@if (isPostOperation && TempData.ContainsKey("TempYearLevel")){@yearlevel}else{@Model.YearLevel}</span><br />
                </div>
                <div style="margin-bottom:10px;">
                    <span class="boldtext" style="margin-right:12px;">Student Classification:</span><span class="">@studentClassification</span><br />
                </div>
                @if (@Model.ProfileDescription != null)
                {
                    @Model.ProfileDescription
                }
                else if (isPostOperation && TempData.ContainsKey("TempProfileDescription"))
                {
                     @profileDescription
                }
            </div>
        </div>
        <div style="padding-top:10px; padding-bottom:30px; text-align:center;">
            <a asp-controller="Profile" asp-action="EditProfile" target="_self" style="color: rgb(0, 0, 0); text-decoration:none;">
                <input type="button" class="btn btn-info btn-md center blueButton" style="width:auto; padding-left:40px; padding-right:40px;" id="btnEditProfile" name="btnEditProfile" value="Edit Profile">
            </a>
        </div>
    </div>

    <!--User Posts-->
    <div class="col-lg-7 userPosts">
    <script>
        var userMedia = [];
        var baseUrl = '@Url.Content("~/uploads/")';
        var counter = 0
        var postIndex = [];
    </script>
        @foreach (var post in userPosts)
        {        
            var userMediaOrig = Json.Serialize(post.UserMedia);
            <script>
                userMedia.push(@Html.Raw(userMediaOrig));
                postIndex.push({ counter: counter, postId: @post.Post.PostId });
            </script>

            <!--1st Post-->
            <div class="card userPostsCard">
                <div class="card-header" style="min-height:60px; position: relative;">
                    <a asp-controller="Dashboard" asp-action="Post" asp-route-postId="@post.Post.PostId" class="navbar-brand card-header-link"></a>
                    <div class="infoPost">
                        <div style="float:left; display:inline-block;">
                            <a asp-controller="Profile" asp-action="Profile" style="pointer-events:auto; position: relative;">
                                <div class="profilePicPost">
                                    @if (isPostOperation && TempData.ContainsKey("TempProfilePic")) {
                                        if (bannerpic != null) {
                                            <img src="~/uploads/@Url.Content(@profilepic)" style="clip-path:circle(50%);">
                                        } else {
                                            <img src="~/img/Avatars/@defaultavatar">
                                        }
                                    } else
                                    {
                                        @if (Model.ProfilePic != null) {
                                            <img src="~/uploads/@Url.Content(Model.ProfilePic)" class="profileImage" id="uploadProfilePicture-previewImg" style="clip-path:circle(50%);">
                                        } else {
                                            <img src="~/img/Avatars/@Model.DefaultAvatar" class="profileImage" style="clip-path:circle(50%);">
                                        }
                                    }
                                </div>
                            </a>
                        </div>
                        <div class="userInfo">
                            <span class="usernamePost btn"><a asp-controller="Profile" asp-action="Profile" style="display:inline-block; pointer-events:auto; position: relative;">@if (isPostOperation && TempData.ContainsKey("TempUsername")){@username}else{@Model.Username}</a></span>
                            <span class="datePost">
                                @{
                                    var timeDifference = DateTime.Now - post.Post.PostDate;

                                    if (timeDifference.TotalSeconds < 60)
                                    {
                                        var seconds = (int)timeDifference.TotalSeconds;
                                                                        <text>Posted @seconds second@(seconds != 1 ? "s" : "") ago</text>
                                    }
                                    else if (timeDifference.TotalMinutes < 60)
                                    {
                                        var minutes = (int)timeDifference.TotalMinutes;
                                                                        <text>Posted @timeDifference.Minutes minute@(minutes != 1 ? "s" : "") ago</text>
                                    }
                                    else if (timeDifference.TotalHours < 24)
                                    {
                                        var hours = (int)timeDifference.TotalHours;
                                                                        <text>Posted @timeDifference.Hours hour@(hours != 1 ? "s" : "") ago</text>
                                    }
                                    else
                                    {
                                                                        <text>Posted on @post.Post.PostDate.ToString("MM/dd/yyyy hh:mm tt")</text>
                                    }
                                }
                            </span>
                        </div>
                        <div style="position:absolute; right:10px; top:25px;">
                            <label for="editPost" class="fa-solid fa-pen-to-square btn btnEditPost" data-toggle="modal" data-target="#editPostModal_@post.Post.PostId" onclick="addIconVisibility(@post.Post.PostId.ToString(), postIndex)"></label>
                            <label for="deletePost" class="fa-solid fa-trash btn btnDeletePost" data-toggle="modal" data-target="#deletePostModal_@post.Post.PostId"></label>
                        </div>
                    </div>
                </div>
                <div>
                    <div class="row cardInfo postCardInfo @(post.Post.IsSensitiveInfo ? "spoiler" : "")">@post.Post.Content</div>
                    <div style="max-height:600px; overflow:hidden; vertical-align: middle; background-color:black;">
                        <div id="postCarousel_@post.Post.PostId" class="carousel" data-ride="carousel">
                            <a asp-controller="Dashboard" asp-action="Post" asp-route-postId="@post.Post.PostId" class="carousel-indicators" style="top:20px; justify-content:end;">
                                <div class="num indicatorBG"></div>
                            </a>
                            <div class="carousel-inner" style="max-height:600px; display:flex; align-items:center;">
                                <div class="blurredBG"></div>
                                @foreach (var media in post.UserMedia)
                                {
                                    <div class="carousel-item @if(media == post.UserMedia.First()) { <text>active</text> }">
                                        @if (media.MediaPath != null && media.MediaPath.Length > 0)
                                        {
                                            if (media.MediaType == "Image")
                                            {
                                                <img src="@Url.Content("/uploads/" + media.MediaPath)" alt="Post Media">
                                            }
                                            else if (media.MediaType == "Video")
                                            {
                                                <video controls data-touch="false" class="embed-responsive" autoplay muted>
                                                    <source src="@Url.Content("/uploads/" + media.MediaPath)" alt="Post Media">
                                                    Your browser does not support the video tag.
                                                </video>
                                            }
                                        }
                                    </div>
                                }
                            </div>
                            <a class="carousel-control-prev" href="#postCarousel_@post.Post.PostId" role="button" data-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="sr-only">Previous</span>
                            </a>
                            <a class="carousel-control-next" href="#postCarousel_@post.Post.PostId" role="button" data-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="sr-only">Next</span>
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-footer row">
                    <div class="col-6">
                        <button class="btn btnLike btnLike_@post.Post.PostId @(post.Liked ? "liked" : "")" for="like" onclick="handleLikeButtonClick(@post.Post.PostId)">
                            <i class="fa-solid fa-thumbs-up" style="margin-right:10px;"></i>Like
                            <span class="likesCount">@if (post.Post.LikesCount > 0) { @post.Post.LikesCount }</span>
                        </button>
                    </div>
                    <div class="col-6">
                        <a asp-controller="Dashboard" asp-action="Post" asp-route-postId="@post.Post.PostId" class="btn btnComment" for="comment">
                            <i class="fa-solid fa-comment" style="margin-right:10px;"></i>
                            <span class="commentsCount">Comment @if (post.Post.CommentsCount > 0) { @post.Post.CommentsCount }</span>
                        </a>
                    </div>
                </div>
            </div>

            <!--EDIT POST MODAL-->
            //ViewBag.PostFromMainView = post;
            //@Html.Partial("_EditPostModalPartialView")
            <div class="modal fade" id="editPostModal_@post.Post.PostId" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                    <div class="modal-content">
                        <form asp-action="EditPost" method="POST" id="editPost_@post.Post.PostId" enctype="multipart/form-data">
                            @Html.AntiForgeryToken()
                            <div class="modal-header" style="text-align:center; display:flex;">
                                <h5 class="modal-title" style="flex:1;">
                                    Edit Post
                                    <span class="text-muted" style="font-size: 15px; display:block;">@post.Post.PostType</span>
                                </h5>
                                <button type="button" class="close fa-solid fa-xmark" data-dismiss="modal" aria-label="Close" style="font-size:1.5rem; padding-top:1.1rem;">
                                </button>
                            </div>
                            <div class="modal-body">
                                <span asp-validation-for="EditPost.Content" class="text-danger" id="error_@post.Post.PostId" style="padding-left:20px; padding-top:20px; display:none;"></span>
                                @* <input asp-for="Posts" type="hidden" name="Posts" value="@serializedPostsRaw" /> *@
                                <input asp-for="UserId" type="hidden" name="UserId" value="@Model.UserId" />
                                <input asp-for="EditPost.PostId" type="hidden" name="EditPost.PostId" value="@post.Post.PostId" />
                                <textarea class="textbox editPostTextarea" name="EditPost.Content" rows="5" placeholder="Share to Thomasians..." id="content_@post.Post.PostId">@post.Post.Content</textarea>
                                <input asp-for="EditPost.PostMedia" type="file" name="EditPost.PostMedia" accept="image/*,video/*" multiple onchange="handleMediaChange(@post.Post.PostId, this, postIndex)" onclick="addMediaFromEmpty(@post.Post.PostId, postIndex)" id="filesInput_@post.Post.PostId" />
                                <input asp-for="EditPost.EditedMediaIds" type="hidden" name="EditPost.EditedMediaIds" id="editedMediaIds_@post.Post.PostId" />
                                <input asp-for="EditPost.DeletedMediaIds" type="hidden" name="EditPost.DeletedMediaIds" id="deletedMediaIds_@post.Post.PostId" />
                                <div class="form-check" style="margin-left:20px; margin-bottom: 20px;">
                                    @if (post.Post.IsSensitiveInfo == true)
                                    {
                                        <input asp-for="EditPost.IsSensitiveInfo" class="form-check-input" type="checkbox" id="isSensitiveInfo" checked>
                                    }
                                    else if (post.Post.IsSensitiveInfo == false)
                                    {
                                        <input asp-for="EditPost.IsSensitiveInfo" class="form-check-input" type="checkbox" id="isSensitiveInfo">
                                    }
                                    <label asp-for="EditPost.IsSensitiveInfo" class="form-check-label">This is a sensitive information</label>
                                </div>

                                <div class="postMediaDiv" id="postMediaDiv_@post.Post.PostId">
                                    @{
                                        int index = 0;
                                    }
                                    @foreach (var media in post.UserMedia)
                                    {
                                        <text>
                                            @if (media.MediaType == "Image")
                                            {
                                                <div class="postImgDiv">
                                                    <div class="hoverImg">
                                                        <div class="btnEditPicDiv">
                                                            <label class="fa-solid fa-pen-to-square btn btnEditPic" for="uploadMedia_@index" onclick="editMedia('@post.Post.PostId', @index, '@media.MediaId', postIndex)" value="@media.MediaPath"></label>
                                                            <button class="fa-solid fa-xmark btn btnRemovePic" onclick="removeMedia('@post.Post.PostId', @index, '@media.MediaId', postIndex)"></button>
                                                        </div>
                                                        <img src="@Url.Content("/uploads/" + media.MediaPath)" class="postActualImg" id="post-previewImg_@index">
                                                    </div>
                                                </div>
                                            }
                                            else if (media.MediaType == "Video")
                                            {
                                                <div class="postVidDiv">
                                                    <div class="hoverVid">
                                                        <div class="btnEditVidDiv">
                                                            <label class="fa-solid fa-pen-to-square btn btnEditVid" for="uploadMedia_@index" onclick="editMedia(@post.Post.PostId, @index, @media.MediaId, postIndex)" value="@media.MediaPath"></label>
                                                            <button class="fa-solid fa-xmark btn btnRemoveVid" onclick="removeMedia(@post.Post.PostId, @index, @media.MediaId, postIndex)"></button>
                                                        </div>
                                                        <video controls data-touch="false" class="embed-responsive" autoplay muted id="post-previewVid_@index">
                                                            <source src="@Url.Content("/uploads/" + media.MediaPath)" alt="Post Media">
                                                            Your browser does not support the video tag.
                                                        </video>
                                                    </div>
                                                </div>
                                            }
                                            @{
                                                index++;
                                            }
                                        </text>
                                    }
                                </div>
                            </div>
                            <div class="modal-footer card-footer card-footer-editPost">
                                <button type="button" class="btn fa-regular fa-image btnPic" onclick="document.getElementById('filesInput_@post.Post.PostId').click()"></button>
                                <button type="button" class="btn fa-solid fa-video btnVid" onclick="document.getElementById('filesInput_@post.Post.PostId').click()"></button>
                                <label for="addMedia" class="btn fa-solid fa-plus btnAdd" onclick="addMedia(@post.Post.PostId, postIndex)" id="addMedia_@post.Post.PostId" style="display:none;"></label>
                                <button type="submit" class="btn btn-info btn-md center blueButton btnPost" id="btnSavePost" data-post-id="@post.Post.PostId" onclick="editPost(@post.Post.PostId)">Save</button>
                            </div>
                        </form>
                        <script>
                            document.getElementById("filesInput_@post.Post.PostId").addEventListener("change", function () {
                                handleMediaChange(@post.Post.PostId.ToString(), this, postIndex);
                            });

                            counter++;
                        </script>
                    </div>
                </div>
            </div>
            
            <!-- DELETE POST MODAL -->
            <div class="modal fade" id="deletePostModal_@post.Post.PostId" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <form asp-action="DeletePost" method="POST" id="deletePostForm" enctype="multipart/form-data">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="postId" value="@post.Post.PostId" />

                            <div class="modal-header" style="text-align:center;">
                                <h5 class="modal-title" style="width:100%; margin-right:-35px;">Delete Post</h5>
                                <button type="button" class="close fa-solid fa-xmark" data-dismiss="modal" aria-label="Close" style="font-size:1.5rem; padding-top:1.1rem;">
                                </button>
                            </div>
                            <div class="modal-body">
                                <p style="margin:20px; text-align:center;">
                                    <span class="text-danger" style="text-align:center;" id="spanErr">@Html.ValidationMessage("removePostErr")</span>
                                    Are you sure you want to delete this post?
                                </p>
                            </div>
                            <div class="modal-footer" style="padding:0.5rem;">
                                <button type="button" class="btn btn-light btn-md border border-dark whiteButton" data-dismiss="modal">Cancel</button>
                                <button class="btn btn-danger btn-md" style="color:#FFFFFF" data-post-id="@post.Post.PostId" onclick="deletePost(@post.Post.PostId)">Delete</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!--BOTTOM SPACE-->
<div style="height:50px;"></div>

@section scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const postIds = @Html.Raw(Json.Serialize(userPosts.Select(p => p.Post.PostId).ToList()));
        @foreach (var post in userPosts)
            {
                <text>initializeCarousel(@post.Post.PostId, postIds); </text>
            }
        });

        function handleLikeButtonClick(postId) {
            if ($(`.btnLike_${postId}`).hasClass('liked')) {
                unlikePost(postId);
            } else {
                likePost(postId);
            }
        }

        function likePost(postId) {
            $.ajax({
                url: '/Dashboard/LikePost',
                type: 'POST',
                data: { postId: postId },
                success: function (result) {
                    if (result.success) {
                        // Update UI based on the like status
                        if (result.liked) {
                            $(`.btnLike_${postId}`).addClass('liked');
                        } else {
                            $(`.btnLike_${postId}`).addClass('liked');
                        }
                        updateLikesCount(postId, result.likesCount);
                    } else {
                        alert('Failed to like post. ' + result.error);
                    }
                },
                error: function (xhr, status, errorThrown) {
                    console.error('Error occurred while liking the post:', status, errorThrown);
                    alert('Error occurred while liking the post. Check the console for details.');
                }
            });
        }

        function unlikePost(postId) {
            $.ajax({
                url: '/Dashboard/UnlikePost',
                type: 'POST',
                data: { postId: postId },
                success: function (result) {
                    if (result.success) {
                        $(`.btnLike_${postId}`).removeClass('liked');
                        updateLikesCount(postId, result.likesCount);
                    } else {
                        alert('Failed to unlike post. ' + result.error);
                    }
                },
                error: function (xhr, status, errorThrown) {
                    console.error('Error occurred while unliking the post:', status, errorThrown);
                    alert('Error occurred while unliking the post. Check the console for details.');
                }
            });
        }

        function updateLikesCount(postId, likesCount) {
            if (likesCount == 0) {
                $(`.btnLike_${postId} .likesCount`).text("");
            } else {
                $(`.btnLike_${postId} .likesCount`).text(likesCount);
            }
        }

        //Submit editPost form
        function editPost(postId) {
            console.log(postId);
            console.log("serialized this: "+$(this).serialize());
            
            var formData = new FormData(document.getElementById(`editPost_${postId}`));
            formData.forEach(function (value, key) {
                console.log(key, value);
            });

            if ($(`#content_${postId}`).val()) {
                $(`#editPostModal_${postId}`).submit(function (e) {
                    console.log('Form submitted');
                    e.preventDefault();
                                
                    $.ajax({
                        url: '/Profile/EditPost',
                        type: 'POST',
                        data: formData,
                        contentType: false,
                        processData: false,
                        headers: {
                            'RequestVerificationToken': $('input[name=__RequestVerificationToken]').val()
                        },
                        success: function (data) {
                            if (data.success) {
                                location.reload();
                            } else {
                                console.log(data.error);
                                $(`#error_${postId}`).text("Caption is required.").css('display', 'block');
                            }
                        },
                        error: function (xhr, status, error) {
                            if (xhr.responseJSON && xhr.responseJSON.errors) {
                                var errorMessages = xhr.responseJSON.errors;
                                for (var key in errorMessages) {
                                    if (errorMessages.hasOwnProperty(key)) {
                                        $(`#${key}`).text(errorMessages[key]).css('display', 'block');
                                    }
                                }
                                console.error('Error editing post', status, error);
                            }
                        }
                    });
                });
            } else {
                $(`#error_${postId}`).text("Caption is required.").css('display', 'block');
            }
        }

        $(document).on('submit', '[id^=editPost_]', function (e) {
            e.preventDefault();
            return false;
        });
    </script>
}