@{
    ViewData["Title"] = "Profile";
    ViewData["CSSFile"] = "~/css/Profile.css";
    ViewData["JSFile"] = "~/js/ViewPost.js";
    @model ThomasianMemoir.ViewModels.ProfileViewModel;
    var studentClassification = "";

    if (Model.YearLevel == "1st Year")
    {
        studentClassification = "Freshmen";
    }
    else if (Model.YearLevel == "2nd Year")
    {
        studentClassification = "Sophomore";
    }
    else if (Model.YearLevel == "3rd Year")
    {
        studentClassification = "Junior";
    }
    else if (Model.YearLevel == "4th Year")
    {
        studentClassification = "Senior";
    }
    else if (Model.YearLevel == "5th Year")
    {
        studentClassification = "Senior";
    }
}
<!--Banner-->
<div class="banner">
    @if (Model.BannerPic != null)
    {
        <img src="@Url.Content(Model.BannerPic)">
    }
    else
    {
        <img src="~/img/Banners/@Model.DefaultBanner" id="uploadBannerPhoto-previewImg">
    }
</div>
<!--Profile-->
<div class="profileParent">
    <div class="profileChild">
        <div class="profilePic">
            @if (Model.ProfilePic != null)
            {
                <img src="@Url.Content(Model.ProfilePic)" style="clip-path:circle(50%);">
            }
            else
            {
                <img src="~/img/Avatars/@Model.DefaultAvatar" class="profileImage" id="uploadProfilePicture-previewImg" style="clip-path:circle(50%);">
            }
        </div>
    </div>
</div>

<div class="details row">
    <!--User Information-->
    <div class="col-lg-4 px-md-5 userDescription">
        <div style="margin-bottom:20px;">
            <h2 style="font-weight:700; margin-bottom:0; word-break:break-all;">@Model.FirstName @Model.LastName</h2>
            <span style="font-size:21px; word-break:break-all;">@@@Model.Username</span>
        </div>
        <div class="card" style="margin-bottom:40px;">
            <div class="cardInfo" style="margin:30px; text-align: justify; text-justify:inter-word;">
                <div style="margin-bottom:10px;">
                    <span class="boldtext" style="margin-right:12px;">Email Address:</span><span class="">@Model.Email</span><br />
                </div>
                <div style="margin-bottom:10px;">
                    <span class="boldtext" style="margin-right:12px;">Year Level:</span><span class="">@Model.YearLevel</span><br />
                </div>
                <div style="margin-bottom:10px;">
                    <span class="boldtext" style="margin-right:12px;">Student Classification:</span><span class="">@studentClassification</span><br />
                </div>
                @if (@Model.ProfileDescription != null)
                {
                    @Model.ProfileDescription
                }
            </div>
        </div>
    </div>

    <!--User Posts-->
    <div class="col-lg-7 userPosts">
        @foreach (var post in Model.Posts)
    {
    <!--1st Post-->
    <div class="card userPostsCard">
        <div class="card-header" style="min-height:60px; position: relative;">
            <a asp-controller="Dashboard" asp-action="Post" asp-route-postId="@post.Post.PostId" class="navbar-brand card-header-link"></a>
            <div class="infoPost">
                <div style="float:left; display:inline-block;">
                  <a asp-controller="Profile" asp-action="PublicProfile" asp-route-userId="@post.Post.UserId" style="pointer-events:auto; position: relative;">
                    <div class="profilePicPost">
                        @if (Model.ProfilePic != null) {
                            <img src="@Url.Content(Model.ProfilePic)" class="profileImage" id="uploadProfilePicture-previewImg" style="clip-path:circle(50%);">
                        } else {
                            <img src="~/img/Avatars/@Model.DefaultAvatar" class="profileImage" style="clip-path:circle(50%);">
                        }
                    </div>
                  </a>
                </div>
                <div class="userInfo">
                    <span class="usernamePost btn"><a asp-controller="Profile" asp-action="PublicProfile" asp-route-userId="@post.Post.UserId" style="display:inline-block; pointer-events:auto; position: relative;">@Model.Username</a></span>
                    <span class="datePost">
                        @{
                        var timeDifference = DateTime.Now - post.Post.PostDate;

                        if (timeDifference.TotalSeconds < 60) {
                            var seconds = (int)timeDifference.TotalSeconds;
                            <text>Posted @seconds second@(seconds != 1 ? "s" : "") ago</text>
                        } else if (timeDifference.TotalMinutes < 60) {
                            var minutes = (int)timeDifference.TotalMinutes;
                            <text>Posted @timeDifference.Minutes minute@(minutes != 1 ? "s" : "") ago</text>
                        } else if (timeDifference.TotalHours < 24) {
                            var hours = (int)timeDifference.TotalHours;
                            <text>Posted @timeDifference.Hours hour@(hours != 1 ? "s" : "") ago</text>
                        } else {
                            <text>Posted on @post.Post.PostDate.ToString("MM/dd/yyyy hh:mm tt")</text>
                        }
                        }
                    </span>
                </div>
            </div>
        </div>
        <div>
        <div class="row cardInfo postCardInfo">@post.Post.Content</div>
        <div style="max-height:600px; overflow:hidden; vertical-align: middle; background-color:black;">
            <div id="postCarousel_@post.Post.PostId" class="carousel" data-ride="carousel">
              <a asp-controller="Dashboard" asp-action="Post" asp-route-postId="@post.Post.PostId" class="carousel-indicators" style="top:20px; justify-content:end;">
                  <div class="num indicatorBG"></div>
              </a>
              <div class="carousel-inner" style="max-height:600px; display:flex; align-items:center;">
                <div class="blurredBG"></div>

                @foreach (var media in post.UserMedia)
                {
                <div class="carousel-item @if(media == post.UserMedia.First()) { <text>active</text> }">
                    @if (media.MediaPath != null && media.MediaPath.Length > 0)
                    {
                        if (media.MediaType == "Image")
                        {
                            <img src="@Url.Content("/uploads/" + media.MediaPath)" alt="Post Media">
                        }
                        else if (media.MediaType == "Video")
                        {
                            <video controls data-touch="false" class="embed-responsive" autoplay muted>
                                <source src="@Url.Content("/uploads/" + media.MediaPath)" alt="Post Media">
                            Your browser does not support the video tag.
                            </video>
                        }
                    }
                </div>
                }
              </div>
              <a class="carousel-control-prev" href="#postCarousel_@post.Post.PostId" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
              </a>
              <a class="carousel-control-next" href="#postCarousel_@post.Post.PostId" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
              </a>
            </div>
        </div>
        </div>
        <div class="card-footer row">
            <div class="col-6">
                <button class="btn btnLike btnLike_@post.Post.PostId @(post.Liked ? "liked" : "")" for="like" onclick="handleLikeButtonClick(@post.Post.PostId)"><i class="fa-solid fa-thumbs-up" style="margin-right:10px;"></i>Like <span class="likesCount">@if(post.Post.LikesCount > 0){@post.Post.LikesCount}</span></button>
            </div>
            <div class="col-6">
                <a asp-controller="Dashboard" asp-action="Post" asp-route-postId="@post.Post.PostId" class="btn btnComment" for="comment"><i class="fa-solid fa-comment" style="margin-right:10px;"></i>Comment @if(post.Post.CommentsCount>0){@post.Post.CommentsCount}</a>
            </div>
        </div>
    </div>
    }

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const postIds = @Html.Raw(Json.Serialize(Model.Posts.Select(p => p.Post.PostId).ToList()));

            @foreach (var post in Model.Posts)
            {
                <text>initializeCarousel(@post.Post.PostId, postIds); </text>
            }
        });
    </script>
    </div>
</div>

<!--BOTTOM SPACE-->
<div style="height:50px;"></div>

@section scripts {
<script>
    function handleLikeButtonClick(postId) {
        if ($(`.btnLike_${postId}`).hasClass('liked')) {
            unlikePost(postId);
        } else {
            likePost(postId);
        }
    }

    function likePost(postId) {
        $.ajax({
            url: '/Dashboard/LikePost',
            type: 'POST',
            data: { postId: postId },
            success: function (result) {
                if (result.success) {
                    // Update UI based on the like status
                    if (result.liked) {
                        $(`.btnLike_${postId}`).addClass('liked');
                    } else {
                        $(`.btnLike_${postId}`).addClass('liked');
                    }
                    updateLikesCount(postId, result.likesCount);
                } else {
                    alert('Failed to like post. ' + result.error);
                }
            },
            error: function (xhr, status, errorThrown) {
                console.error('Error occurred while liking the post:', status, errorThrown);
                alert('Error occurred while liking the post. Check the console for details.');
            }
        });
    }

    function unlikePost(postId) {
        $.ajax({
            url: '/Dashboard/UnlikePost',
            type: 'POST',
            data: { postId: postId },
            success: function (result) {
                if (result.success) {
                    $(`.btnLike_${postId}`).removeClass('liked');
                    updateLikesCount(postId, result.likesCount);
                } else {
                    alert('Failed to unlike post. ' + result.error);
                }
            },
            error: function (xhr, status, errorThrown) {
                console.error('Error occurred while unliking the post:', status, errorThrown);
                alert('Error occurred while unliking the post. Check the console for details.');
            }
        });
    }

    function updateLikesCount(postId, likesCount) {
        if (likesCount == 0) {
            $(`.btnLike_${postId} .likesCount`).text("");
        } else {
            $(`.btnLike_${postId} .likesCount`).text(likesCount);
        }
    }
</script>
}