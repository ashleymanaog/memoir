@{
    ViewData["Title"] = "Post";
    ViewData["CSSFile"] = "~/css/Post.css";
    ViewData["JSFile"] = "~/js/ViewPost.js";
    @model ThomasianMemoir.ViewModels.PostViewModel;
    var postId = Model.PostWithDetails.PostId;
    var userId = Model.PostWithDetails.Post.UserId;
}
<!--User Post-->
<div class="col-lg-7 userPosts">
    <div class="card userPostsCard">
        <div class="card-header" style="min-height:60px; position: relative;">
            <div class="infoPost">
                <div style="float:left; display:inline-block;">
                    <a asp-controller="Profile" asp-action="PublicProfile" asp-route-userId="@userId" style="pointer-events:auto; position: relative;">
                        <div class="profilePicPost">
                            @if (Model.PostWithDetails.ProfilePic != null) {
                                <img src="~/uploads/@Url.Content(Model.PostWithDetails.ProfilePic)" class="profileImage" id="uploadProfilePicture-previewImg" style="clip-path:circle(50%);">
                            } else {
                                <img src="~/img/Avatars/@Model.PostWithDetails.DefaultAvatar" class="profileImage" style="clip-path:circle(50%);">
                            }
                        </div>
                    </a>
                </div>
                <div class="userInfo" style="text-align:left;">
                    <span class="usernamePost btn"><a asp-controller="Profile" asp-action="PublicProfile" asp-route-userId="@userId" style="display:inline-block; pointer-events:auto; position: relative;">@Model.PostWithDetails.Username</a></span>
                    <span class="datePost">
                    @{
                    var timeDifference = DateTime.Now - Model.PostWithDetails.Post.PostDate;

                    if (timeDifference.TotalSeconds < 60) {
                        var seconds = (int)timeDifference.TotalSeconds;
                        <text>Posted @seconds second@(seconds != 1 ? "s" : "") ago</text>
                    } else if (timeDifference.TotalMinutes < 60) {
                        var minutes = (int)timeDifference.TotalMinutes;
                        <text>Posted @timeDifference.Minutes minute@(minutes != 1 ? "s" : "") ago</text>
                    } else if (timeDifference.TotalHours < 24) {
                        var hours = (int)timeDifference.TotalHours;
                        <text>Posted @timeDifference.Hours hour@(hours != 1 ? "s" : "") ago</text>
                    } else {
                        <text>Posted on Model.Post.PostDate.ToString("MM/dd/yyyy hh:mm tt")</text>
                    }
                    }</span>
                </div>
            </div>
        </div>
        <div>
            <div class="row postCardInfo">@Model.PostWithDetails.Post.Content</div>
            <div style="max-height:600px; overflow:hidden; vertical-align:middle; background-color:black;" class="imagesDiv">
                <div id="postCarousel_@Model.PostWithDetails.PostId" class="carousel" data-ride="carousel" data-interval="false">
                    <a asp-controller="Dashboard" asp-action="PostPictures" asp-route-postId="@Model.PostWithDetails.PostId" class="carousel-indicators" style="top:20px; justify-content:end;">
                        <div class="num indicatorBG"></div>
                    </a>
                    <div class="carousel-inner" style="max-height:600px; display:flex; align-items:center;">
                        <div class="blurredBG"></div>
                        @foreach (var media in Model.PostWithDetails.UserMedia)
                        {
                        <div class="carousel-item @if(media == Model.PostWithDetails.UserMedia.First()) { <text>active</text> }">
                            @if (media.MediaPath != null && media.MediaPath.Length > 0)
                            {
                                if (media.MediaType == "Image")
                                {
                                    <img src="@Url.Content("/uploads/" + media.MediaPath)" alt="Post Media">
                                }
                                else if (media.MediaType == "Video")
                                {
                                    <video controls data-touch="false" class="embed-responsive" autoplay muted>
                                        <source src="@Url.Content("/uploads/" + media.MediaPath)" alt="Post Media">
                                    Your browser does not support the video tag.
                                    </video>
                                }
                            }
                        </div>
                        }                        
                    </div>
                    
                    <a class="carousel-control-prev" href="#postCarousel_@Model.PostWithDetails.PostId" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#postCarousel_@Model.PostWithDetails.PostId" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            </div>
        </div>
        <div class="card-footer row" style="overflow:hidden;">
            <div class="col-6">
                <button class="btn btnLike btnLike_@postId @(Model.PostWithDetails.Liked ? "liked" : "")" for="like" onclick="handleLikeButtonClick(@postId)"><i class="fa-solid fa-thumbs-up" style="margin-right:10px;"></i>Like <span class="likesCount">@if(Model.PostWithDetails.Post.LikesCount > 0){@Model.PostWithDetails.Post.LikesCount}</span></button>
            </div>

            <div class="col-6">
                <button type="button" id="btnCommentDiv" style="text-align:center;" class="btn btnComment btnComment_@postId" onclick="commentOnTextarea()">
                    <i class="fa-solid fa-comment" style="margin-right:10px;"></i>Comment <span class="commentsCount">@if(Model.PostWithDetails.Post.CommentsCount > 0){@Model.PostWithDetails.Post.CommentsCount}</span>
                </button>
            </div>
            <hr style="height:0.5px; margin:0;">
            <div class="col-12" style="margin-top:15px;">
                <div class="commentDiv">
                    <div style="float:left; display:inline-block; padding-top:inherit;">
                        <a asp-controller="Profile" asp-action="PublicProfile" asp-route-userId="@Model.UserId" style="pointer-events:auto;">
                        <div class="profilePicComment"style="margin-top:0;">
                            @if (Model.UserProfile != null) {
                                <img src="~/uploads/@Url.Content(Model.UserProfile)" style="clip-path:circle(50%);">
                            } else {
                                <img src="~/img/Avatars/@Model.DefaultAvatar" class="profileImage" style="clip-path:circle(50%);">
                            }
                        </div>
                        </a>
                    </div>
                    <div class="textareaCommentDiv">
                        <span id="reply-details" style="display:none; float:left; text-align:left; margin-bottom:5px;">
                            <span id="reply-to"></span>
                            <button class="cancel-reply btn btnLink cancelReply" style="display:inline-block; text-decoration:none; color:#0ba2b5;">Cancel</button>
                        </span>
                        <form method="post" id="commentForm" style="width:100%;" class="d-flex">
                            <textarea rows="1" id="commentTextarea" name="NewComment" form="commentForm" class="textbox textarea flex-column" placeholder="Share your thoughts..." required></textarea>
                            <input type="hidden" name="PostId" value="@postId">
                            <input type="hidden" id="ParentCommentId" name="ParentCommentId" value="">
                            <button type="button" style="color: rgb(0, 0, 0); text-decoration:none; width:auto; height:40px; vertical-align:top;" class="btn btn-info btn-md center blueButton justify-content-end" id="btnSubmitComment">Comment</button>
                        </form>
                    </div>
                </div>
                <div id="wholeCommentsSection">
                @foreach (var comment in Model.PostWithDetails.UserComments)
                {
                    if (comment.ParentCommentId == null)
                    {
                        @Html.Partial("_CommentPartialView", comment)
                    }
                }
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts {
<script>
    const postIds = [@postId];

    document.addEventListener("DOMContentLoaded", function () {
        initializeCarousel(@postId);
    });

    initializeCarousel(@postId, postIds);

    function handleLikeButtonClick(postId) {
        if ($(`.btnLike_${postId}`).hasClass('liked')) {
            unlikePost(postId);
        } else {
            likePost(postId);
        }
    }

    function likePost(postId) {
        $.ajax({
            url: '/Dashboard/LikePost',
            type: 'POST',
            data: { postId: postId },
            success: function (result) {
                if (result.success) {
                    // Update UI based on the like status
                    if (result.liked) {
                        $(`.btnLike_${postId}`).addClass('liked');
                    } else {
                        $(`.btnLike_${postId}`).addClass('liked');
                    }
                    updateLikesCount(postId, result.likesCount);
                } else {
                    alert('Failed to like post. ' + result.error);
                }
            },
            error: function (xhr, status, errorThrown) {
                console.error('Error occurred while liking the post:', status, errorThrown);
                alert('Error occurred while liking the post. Check the console for details.');
            }
        });
    }

    function unlikePost(postId) {
        $.ajax({
            url: '/Dashboard/UnlikePost',
            type: 'POST',
            data: { postId: postId },
            success: function (result) {
                if (result.success) {
                    $(`.btnLike_${postId}`).removeClass('liked');
                    updateLikesCount(postId, result.likesCount);
                } else {
                    alert('Failed to unlike post. ' + result.error);
                }
            },
            error: function (xhr, status, errorThrown) {
                console.error('Error occurred while unliking the post:', status, errorThrown);
                alert('Error occurred while unliking the post. Check the console for details.');
            }
        });
    }

    function updateLikesCount(postId, likesCount) {
        if (likesCount == 0) {
            $(`.btnLike_${postId} .likesCount`).text("");
        } else {
            $(`.btnLike_${postId} .likesCount`).text(likesCount);
        }
    }

    function updateCommentsCount(postId, commentsCount) {
        if (commentsCount == 0) {
            $(`.btnComment_${postId} .commentsCount`).text("");
        } else {
            $(`.btnComment_${postId} .commentsCount`).text(commentsCount);
        }
    }
    
    $(document).ready(function () {
        //Check if textarea is not empty before submit
        $('#commentTextarea').on('input', function () {
            if ($(this).val().trim() !== '') {
                $('#btnSubmitComment').prop('disabled', false).attr('type', 'submit');
            } else {
                $('#btnSubmitComment').prop('disabled', true).attr('type', 'button');
            }
        });

        //Submit commentForm
        $('#commentForm').submit(function (e) {
            e.preventDefault();

            $.ajax({
                url: '/Dashboard/AddComment',
                type: 'POST',
                data: $(this).serialize(),
                success: function (data) {
                    if (data.success) {
                        $('#reply-details').hide();
                        $('#ParentCommentId').val("");

                        var commentContainer;

                        if (data.parentCommentId !== "") { // is a reply
                            commentContainer = $('#commentsSection #comment_' + data.parentCommentId);
                        } else { // top-level comment
                            commentContainer = $('#wholeCommentsSection');
                        }

                        commentContainer.append(data.commentHtml);

                        $('#commentTextarea').val('');
                        updateCommentsCount(data.postId, data.commentsCount);
                    } else {
                        alert('Failed to add comment. ' + data.error);
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error adding comment:', status, error);
                    alert('Error adding comment. Check the console for details.');
                }
            });
        });

        //Reply Button Clicked
        $('#wholeCommentsSection').on('click', '.reply-button', function () {
            var username = $(this).data('username');
            var commentId = $(this).data('commentid');
            var parentcomment = $(this).data('parentcomment');
            $('#reply-details').show();
                $('#reply-to').text('Reply to '+username+"'s comment: "+parentcomment);
            $('#commentTextarea').focus();
            $('#ParentCommentId').val(commentId);
        });

        //Cancel Reply Button Clicked
        $('.cancel-reply').click(function () { 
            $('#reply-details').hide();
            $('#ParentCommentId').val("");
        });
    });
</script>
}